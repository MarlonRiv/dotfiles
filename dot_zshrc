# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

alias inv='nvim $(fzf -m --preview="bat --color=always {}")'
alias vi="nvim"
alias lg="lazygit"

function sb() {
    source ~/.zshrc && echo "✅ .zshrc reloaded successfully"
}

function mkcd() {
    mkdir -p "$1" && cd "$1"
}

function logs() {
    git log --oneline | fzf --preview 'git show --color=always {+1}' | awk '{print $1}' | xargs -I {} git show {}
}
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Shell wrapper for yazi to change current directory when exiting yazi
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	IFS= read -r -d '' cwd < "$tmp"
	[ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
	rm -f -- "$tmp"
}

function catkin_build_with_compile_commands() {
    # Check if jq is installed
    if ! command -v jq &> /dev/null; then
        echo "Error: jq is required but not installed. Install with: sudo apt install jq"
        return 1
    fi
    
    # Check if we're in a catkin workspace
    if [ ! -f "src/CMakeLists.txt" ] && [ ! -d "src" ]; then
        echo "Error: Not in a catkin workspace root directory"
        return 1
    fi
    
    echo "Running catkin build..."
    catkin build "$@"
    
    local build_status=$?
    
    if [ $build_status -eq 0 ]; then
        echo "✓ Build successful, generating compile_commands.json..."
        
        if [ ! -d "build" ]; then
            echo "Warning: No build directory found after successful build"
            return 1
        fi
        
        # Remove old merged file
        rm -f compile_commands.json
        
        # Count available compile_commands.json files
        local file_count=$(find build -name "compile_commands.json" -type f | wc -l)
        
        if [ $file_count -eq 0 ]; then
            echo "Warning: No compile_commands.json files found in build directory"
            return 1
        fi
        
        echo "Merging compile commands from $file_count files:"
        find build -name "compile_commands.json" -type f | while read file; do
            echo "  - $file"
        done
        
        # Merge all files
        find build -name "compile_commands.json" -type f -exec cat {} \; | jq -s 'add' > compile_commands.json
        
        if [ -f "compile_commands.json" ]; then
            local entry_count=$(jq length compile_commands.json 2>/dev/null || echo "unknown")
            echo "✓ Created merged compile_commands.json with $entry_count entries"
        else
            echo "Error: Failed to create compile_commands.json"
            return 1
        fi
    else
        echo "✗ Build failed (exit code: $build_status), skipping compile_commands.json generation"
        return $build_status
    fi
}

# Aliases for convenience
alias cb='catkin_build_with_compile_commands'
alias cbcc='catkin_build_with_compile_commands'

#Tmux starting logic to check if tmux is available and attaches to existing session, if not create a new one
if command -v tmux &> /dev/null && [[ -z "$TMUX" ]]; then
    tmux attach || tmux new-session
fi

# Set up fzf key bindings and fuzzy completion
# source <(fzf --zsh)

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#

eval "$(starship init zsh)"

# Created by `pipx` on 2025-05-21 09:58:41
export PATH="$PATH:/home/marlonriv/.local/bin"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
# export PATH="$HOME/.local/bin:$PATH"
#

export ROS_WORKSPACE="/home/rivermar/iroc_workspace"
